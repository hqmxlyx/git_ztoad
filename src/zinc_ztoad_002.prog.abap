*----------------------------------------------------------------------*
***INCLUDE ZINC_ZTOAD_002.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form FRM_GENERATE_PROGRAM
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      -->P_LT_TABLE_ALIAS  text
*      -->P_FW_WHERE  text
*      -->P_FT_FIELDLIST  text
*&---------------------------------------------------------------------*
FORM FRM_GENERATE_PROGRAM  TABLES  LT_TABLE_ALIAS STRUCTURE LS_TABLE_ALIAS
                                    LT_SELECT_TABLE TYPE SOLI_TAB
                           USING    FW_WHERE
                                    FT_FIELDLIST TYPE TY_FIELDLIST_TABLE
                                    LW_QUERY.

  DATA:BEGIN OF IT_REPORT OCCURS 0,
         ROW TYPE CHAR3000,
       END OF IT_REPORT.


  DATA:BEGIN OF IT_WHERE OCCURS 0,
         ROW TYPE CHAR3000,
       END OF IT_WHERE.

  DATA:BEGIN OF IT_LAYOUT OCCURS 0,
         ROW TYPE CHAR3000,
       END OF IT_LAYOUT.

  DATA:STR          TYPE STRING,
       STRR         TYPE STRING,
       STR_TABLE    TYPE STRING,
       STR_COND     TYPE STRING,
       STR_NAME     TYPE STRING,
       PROGNAME     TYPE CHAR20,
       PROG_DESC    TYPE CHAR50,
       LW_MESS(255),
       LW_LINE      TYPE I,
       LW_WORD(30).

  DATA:BEGIN OF IT_LINE OCCURS 0,
         ROW TYPE CHAR3000,
       END OF IT_LINE.

  DATA:BEGIN OF LT_COND OCCURS 0,
         FIELD TYPE CHAR50,
         ALIAS TYPE CHAR50,
       END OF LT_COND.

  DATA: TEXT1 TYPE SORTED TABLE OF TEXTPOOL
          WITH UNIQUE KEY ID KEY,
        TEXT2 TYPE SORTED TABLE OF TEXTPOOL
                   WITH UNIQUE KEY ID KEY,
        WA1   TYPE TEXTPOOL,
        WA2   TYPE TEXTPOOL.


  "读取模板程序
  READ REPORT 'ZINC_ZTOAD_001' INTO IT_REPORT.

  FIND ',' IN LW_QUERY.
  IF SY-SUBRC = 0.
    DATA(L_FLAG) = 'X'.
  ENDIF.


  LOOP AT LT_SELECT_TABLE ASSIGNING FIELD-SYMBOL(<WA_SELECT_TABLE>).
    IF <WA_SELECT_TABLE>-LINE IS INITIAL.
      DELETE  LT_SELECT_TABLE INDEX SY-TABIX.
      CONTINUE.
    ENDIF.
    IF STR_NAME IS INITIAL.
      SPLIT  <WA_SELECT_TABLE>-LINE AT ':'  INTO STR_NAME PROG_DESC.
      IF STR_NAME IS INITIAL.
        RETURN.
      ENDIF.
      REPLACE '"' WITH  '' INTO STR_NAME.
      REPLACE ALL OCCURRENCES OF '-'  IN STR_NAME WITH ''.
      DELETE LT_SELECT_TABLE INDEX SY-TABIX.
      CONTINUE.
    ENDIF.
  ENDLOOP.
  CONDENSE STR_NAME NO-GAPS.


  "拆分 WHERE 条件
  STR = FW_WHERE.
  TRANSLATE STR TO UPPER CASE.
  REPLACE 'WHERE' WITH '' INTO STR.
  DO.
    SEARCH STR FOR '='.
    IF SY-SUBRC = 0.
      DATA(L_BEGIN) = SY-FDPOS.
    ENDIF.
    SEARCH STR FOR 'AND'.
    IF SY-SUBRC <> 0.
      DATA(L_END) = STRLEN( STR ).
      L_END = L_END - L_BEGIN.
      STRR = STR+L_BEGIN(L_END) .
      REPLACE STRR WITH '' INTO STR.
      REPLACE 'AND' WITH '' INTO STR.
      EXIT.
    ELSE.
      L_END = SY-FDPOS - L_BEGIN.
      STRR = STR+L_BEGIN(L_END).
      REPLACE STRR WITH '' INTO STR.
      REPLACE 'AND' WITH '' INTO STR.
    ENDIF.
  ENDDO.

  SPLIT  STR AT ' ' INTO TABLE DATA(IT_SELECT) .
  LOOP AT IT_SELECT ASSIGNING FIELD-SYMBOL(<WA_SELECT>).
    IF <WA_SELECT> IS INITIAL.
      DELETE IT_SELECT INDEX SY-TABIX.
      CONTINUE.
    ENDIF.
    SPLIT  <WA_SELECT>  AT '~' INTO  DATA(STR1) DATA(STR2) .
    LT_COND-FIELD = STR2.
    LT_COND-ALIAS = STR1.
    APPEND  LT_COND.
    CLEAR  LT_COND.
  ENDLOOP.


  "写入WHERE 条件
  LOOP AT LT_SELECT_TABLE  ASSIGNING FIELD-SYMBOL(<WA_SEL_TABLE>).
    TRANSLATE <WA_SEL_TABLE>-LINE TO UPPER CASE.

    SEARCH <WA_SEL_TABLE>-LINE FOR 'TABLE'.
    IF SY-SUBRC = 0.
      L_BEGIN = SY-FDPOS + 6.

      SEARCH <WA_SEL_TABLE>-LINE FOR 'FROM'.
      IF SY-SUBRC = 0.
        L_END = SY-FDPOS - L_BEGIN.
        STRR = <WA_SEL_TABLE>-LINE+L_BEGIN(L_END).
        IF L_FLAG = 'X'.
          REPLACE STRR WITH '| @IT_ITEM' INTO <WA_SEL_TABLE>-LINE.
        ELSE.
          REPLACE STRR WITH '| IT_ITEM' INTO <WA_SEL_TABLE>-LINE.
        ENDIF.

      ELSE.
        IF L_FLAG = 'X'.
          <WA_SEL_TABLE>-LINE = <WA_SEL_TABLE>-LINE+0(L_BEGIN) && '| @IT_ITEM' .
        ELSE.
          <WA_SEL_TABLE>-LINE = <WA_SEL_TABLE>-LINE+0(L_BEGIN) && '| IT_ITEM' .
        ENDIF.
      ENDIF.

      REPLACE ALL OCCURRENCES OF '|' IN <WA_SEL_TABLE>-LINE WITH ''.
    ENDIF.

    SEARCH <WA_SEL_TABLE>-LINE FOR 'WHERE'.
    IF SY-SUBRC = 0.
      DATA(L_DEL) = 'X'.
    ENDIF.
    IF L_DEL = 'X'.
      DELETE LT_SELECT_TABLE INDEX SY-TABIX.
      CONTINUE.
    ENDIF.
  ENDLOOP.

  LOOP AT IT_SELECT ASSIGNING FIELD-SYMBOL(<WA_SEL>).
    AT FIRST.
      DATA(L_FIRST) = 'X'.
    ENDAT.
    AT LAST.
      DATA(L_LAST) = 'X'.
    ENDAT.

    SPLIT <WA_SEL> AT  '~' INTO STR1 STR2.
    IF L_LAST = 'X'.
      IF L_FLAG = 'X'.
        LT_SELECT_TABLE-LINE = <WA_SEL> && '| IN @S_' && STR2 && '.'.
      ELSE.
        LT_SELECT_TABLE-LINE = <WA_SEL> && '| IN S_' && STR2 && '.'.
      ENDIF.
    ELSE.
      IF L_FIRST = 'X'.
        IF L_FLAG = 'X'.
          LT_SELECT_TABLE-LINE = 'WHERE |' && <WA_SEL> && '| IN @S_' && STR2 && '| AND'.
        ELSE.
          LT_SELECT_TABLE-LINE = 'WHERE |' && <WA_SEL> && '| IN S_' && STR2 && '| AND'.
        ENDIF.
      ELSE.
        IF L_FLAG = 'X'.
          LT_SELECT_TABLE-LINE = <WA_SEL> && '| IN @S_' && STR2 && '| AND'.
        ELSE.
          LT_SELECT_TABLE-LINE = <WA_SEL> && '| IN S_' && STR2 && '| AND'.
        ENDIF.
      ENDIF.
    ENDIF.
    REPLACE ALL OCCURRENCES OF '|' IN LT_SELECT_TABLE-LINE WITH ''.
    APPEND LT_SELECT_TABLE.
    CLEAR LT_SELECT_TABLE-LINE.


    WA1-ID = 'S'.
    WA1-KEY = 'S_'&& STR2.
    SELECT SINGLE REPTEXT INTO WA1-ENTRY FROM DD04T WHERE ROLLNAME = STR2 AND DDLANGUAGE = SY-LANGU.
    WA1-ENTRY = '        |'&&  WA1-ENTRY.
    REPLACE '|' WITH '' INTO  WA1-ENTRY.
    WA1-LENGTH = '30'.
    INSERT WA1 INTO TABLE TEXT1 .
    CLEAR WA1.
  ENDLOOP.


  "写入查询语句
  READ TABLE IT_REPORT TRANSPORTING NO FIELDS WITH KEY ROW = '*INSERT3'.
  IF SY-SUBRC = 0.
    INSERT LINES OF LT_SELECT_TABLE  INTO IT_REPORT INDEX SY-TABIX.
  ENDIF.


  "增加筛选条件
  LOOP AT LT_COND ASSIGNING FIELD-SYMBOL(<WA_COND>).
    AT FIRST.
      STR_TABLE = 'TABLES:'.
      STR_COND = 'SELECT-OPTIONS: S_'.
    ENDAT.

    AT LAST.
      READ TABLE LT_TABLE_ALIAS ASSIGNING FIELD-SYMBOL(<WA_TABLE_ALIAS_LAST>) WITH KEY  ALIAS = <WA_COND>-ALIAS.
      IF SY-SUBRC = 0.
        STR_TABLE = STR_TABLE  && <WA_TABLE_ALIAS_LAST>-TABLE && '.'.
        "筛选条件
        IT_LINE-ROW = STR_COND && <WA_COND>-FIELD && '| FOR |' && <WA_TABLE_ALIAS_LAST>-TABLE && '-' && <WA_COND>-FIELD && '.'.
        REPLACE ALL OCCURRENCES OF '|' IN IT_LINE-ROW WITH ''.
        APPEND IT_LINE.
        CLEAR IT_LINE.
      ENDIF.
      EXIT.
    ENDAT.

    READ TABLE LT_TABLE_ALIAS ASSIGNING FIELD-SYMBOL(<WA_TABLE_ALIAS>) WITH KEY  ALIAS = <WA_COND>-ALIAS.
    IF SY-SUBRC = 0.
      STR_TABLE = STR_TABLE  && <WA_TABLE_ALIAS>-TABLE && ','.
      "筛选条件
      IT_LINE-ROW = STR_COND && <WA_COND>-FIELD && '| FOR |' && <WA_TABLE_ALIAS>-TABLE && '-' && <WA_COND>-FIELD && '.'.
      REPLACE ALL OCCURRENCES OF  '|'  IN IT_LINE-ROW  WITH  ''.
      APPEND IT_LINE.
      CLEAR IT_LINE.
    ENDIF.
  ENDLOOP.

  "写入表名称
  INSERT STR_TABLE  INTO IT_REPORT INDEX 1.




  "写入程序名称
  PROGNAME = STR_NAME.
  STR_NAME = 'REPORT |' && STR_NAME && '.'.
  REPLACE '|' WITH '' INTO STR_NAME .
  INSERT STR_NAME INTO IT_REPORT INDEX 1.


  "写入查询条件
  READ TABLE IT_REPORT TRANSPORTING NO FIELDS WITH KEY ROW = '*INSERT1'.
  IF SY-SUBRC = 0.
    INSERT LINES OF IT_LINE  INTO IT_REPORT INDEX SY-TABIX.
  ENDIF.
  REFRESH:IT_LINE.


  "写入查询条件
  READ TABLE IT_REPORT TRANSPORTING NO FIELDS WITH KEY ROW = '* PERFORM FRM_ALV_OUTPUT.'.
  IF SY-SUBRC = 0.
    INSERT 'PERFORM FRM_ALV_OUTPUT.'  INTO IT_REPORT  INDEX SY-TABIX.
  ENDIF.


  .


  "写入LAYOUT 属性。
  DATA:L_LAYOUT TYPE STRING.
  LOOP AT FT_FIELDLIST ASSIGNING FIELD-SYMBOL(<WA_FIELD>).
    L_LAYOUT = ''' '''' '''' '''' '''' '''' '''.
    IT_LAYOUT-ROW = 'MACRO_FILL_FCAT L_COLPOS ''' && <WA_FIELD>-REF_FIELD && L_LAYOUT  && <WA_FIELD>-REF_TABLE && ''' ''' && <WA_FIELD>-REF_FIELD && '''.'.
    APPEND IT_LAYOUT.
    CLEAR:IT_LAYOUT,L_LAYOUT.

    IT_LINE-ROW = <WA_FIELD>-REF_FIELD && '| TYPE |' && <WA_FIELD>-REF_TABLE && '-' && <WA_FIELD>-REF_FIELD && ','.
    REPLACE ALL OCCURRENCES OF  '|'  IN IT_LINE-ROW  WITH  ''.
    APPEND IT_LINE.
    CLEAR IT_LINE.
  ENDLOOP.

  "写入内表结构
  READ TABLE IT_REPORT TRANSPORTING NO FIELDS WITH KEY ROW = '*INSERT2'.
  IF SY-SUBRC = 0.
    INSERT LINES OF IT_LINE  INTO IT_REPORT INDEX SY-TABIX.
  ENDIF.
  REFRESH:IT_LINE.



  "写入内表fieldcate.
  READ TABLE IT_REPORT TRANSPORTING NO FIELDS WITH KEY ROW = '*INSERT4'.
  IF SY-SUBRC = 0.
    INSERT LINES OF IT_LAYOUT  INTO IT_REPORT INDEX SY-TABIX.
  ENDIF.

  "创建程序
  INSERT REPORT PROGNAME FROM IT_REPORT.


  SYNTAX-CHECK FOR IT_REPORT PROGRAM PROGNAME
               MESSAGE LW_MESS LINE LW_LINE WORD LW_WORD.
  IF SY-SUBRC NE 0 .
    MESSAGE LW_MESS TYPE 'S' DISPLAY LIKE 'E'.
    RETURN.
  ELSE.
    MESSAGE '创建成功！' TYPE 'S'.
  ENDIF.



  "----------------------------------写入文本

  "读取文本信息
*  READ TEXTPOOL PROGNAME: INTO TEXT1 LANGUAGE SY-LANGU,
*                         INTO TEXT2 LANGUAGE SY-LANGU.
  WA1-ID = 'I'.
  WA1-KEY = '001'.
  WA1-ENTRY = '选择条件'.
  WA1-LENGTH = '14'.
  INSERT WA1 INTO TABLE TEXT1 .
  CLEAR WA1.

  WA1-ID = 'R'.
  WA1-KEY = ''.
  WA1-ENTRY = PROG_DESC.
  WA1-LENGTH = '7'.
  INSERT WA1 INTO TABLE TEXT1 .
  CLEAR WA1.

  "文本信息
  INSERT TEXTPOOL PROGNAME FROM TEXT1 LANGUAGE SY-LANGU.
  "----------------------------------写入文本



ENDFORM.
